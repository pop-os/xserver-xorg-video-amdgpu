Index: xserver-xorg-video-amdgpu/src/amdgpu_kms.c
===================================================================
--- xserver-xorg-video-amdgpu.orig/src/amdgpu_kms.c
+++ xserver-xorg-video-amdgpu/src/amdgpu_kms.c
@@ -1501,6 +1501,25 @@ static Bool AMDGPUCreateWindow_oneshot(W
 	return ret;
 }
 
+static void amdgpu_determine_cursor_size(int fd, AMDGPUInfoPtr info)
+{
+	uint64_t value;
+
+	if (drmGetCap(fd, DRM_CAP_CURSOR_WIDTH, &value) == 0)
+		info->cursor_w = value;
+	else if (info->family < AMDGPU_FAMILY_CI)
+		info->cursor_w = CURSOR_WIDTH;
+	else
+		info->cursor_w = CURSOR_WIDTH_CIK;
+
+	if (drmGetCap(fd, DRM_CAP_CURSOR_HEIGHT, &value) == 0)
+		info->cursor_h = value;
+	else if (info->family < AMDGPU_FAMILY_CI)
+		info->cursor_h = CURSOR_HEIGHT;
+	else
+		info->cursor_h = CURSOR_HEIGHT_CIK;
+}
+
 /* When the root window is mapped, set the initial modes */
 void AMDGPUWindowExposures_oneshot(WindowPtr pWin, RegionPtr pRegion
 #if XORG_VERSION_CURRENT < XORG_VERSION_NUMERIC(1,16,99,901,0)
@@ -1684,13 +1703,7 @@ Bool AMDGPUPreInit_KMS(ScrnInfoPtr pScrn
 	else
 		pAMDGPUEnt->HasCRTC2 = TRUE;
 
-	if (info->family < AMDGPU_FAMILY_CI) {
-		info->cursor_w = CURSOR_WIDTH;
-		info->cursor_h = CURSOR_HEIGHT;
-	} else {
-		info->cursor_w = CURSOR_WIDTH_CIK;
-		info->cursor_h = CURSOR_HEIGHT_CIK;
-	}
+	amdgpu_determine_cursor_size(pAMDGPUEnt->fd, info);
 
 	amdgpu_query_heap_size(pAMDGPUEnt->pDev, AMDGPU_GEM_DOMAIN_GTT,
 				&heap_size, &max_allocation);
